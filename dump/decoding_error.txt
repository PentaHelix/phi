[{
	access: []
	doc: null
	kind: FVar(TPath({
		name: TileGroup
		pack: []
		params: []
		sub: null
	}), null)
	meta: []
	name: tileGroup
	pos: #pos
}, {
	access: []
	doc: null
	kind: FVar(TPath({
		name: Array
		pack: []
		params: [TPType(TPath({
			name: Tile
			pack: []
			params: []
			sub: null
		}))]
		sub: null
	}), {
		expr: EArrayDecl([])
		pos: #pos
	})
	meta: []
	name: tiles
	pos: #pos
}, {
	access: [APublic]
	doc: null
	kind: FFun({
		args: []
		expr: {
			expr: EBlock([{
				expr: EVars([{
					expr: {
						expr: ECall({
							expr: EField({
								expr: ECall({
									expr: EField({
										expr: EConst(CIdent(Res))
										pos: #pos
									}, load)
									pos: #pos
								}, [{
									expr: EConst(CString(tiles.png, DoubleQuotes))
									pos: #pos
								}])
								pos: #pos
							}, toTile)
							pos: #pos
						}, [])
						pos: #pos
					}
					isFinal: false
					name: tileMap
					type: null
				}])
				pos: #pos
			}, {
				expr: EBinop(OpAssign, {
					expr: EConst(CIdent(tileGroup))
					pos: #pos
				}, {
					expr: ENew({
						name: TileGroup
						pack: []
						params: []
						sub: null
					}, [{
						expr: EConst(CIdent(tileMap))
						pos: #pos
					}, {
						expr: EConst(CIdent(null))
						pos: #pos
					}])
					pos: #pos
				})
				pos: #pos
			}, {
				expr: EBinop(OpAssign, {
					expr: EConst(CIdent(tiles))
					pos: #pos
				}, {
					expr: EArrayDecl([{
						expr: EFor({
							expr: EBinop(OpIn, {
								expr: EConst(CIdent(x))
								pos: #pos
							}, {
								expr: EBinop(OpInterval, {
									expr: EConst(CInt(0))
									pos: #pos
								}, {
									expr: EField({
										expr: EConst(CIdent(C))
										pos: #pos
									}, TILE_COUNT)
									pos: #pos
								})
								pos: #pos
							})
							pos: #pos
						}, {
							expr: EFor({
								expr: EBinop(OpIn, {
									expr: EConst(CIdent(y))
									pos: #pos
								}, {
									expr: EBinop(OpInterval, {
										expr: EConst(CInt(0))
										pos: #pos
									}, {
										expr: EConst(CInt(1))
										pos: #pos
									})
									pos: #pos
								})
								pos: #pos
							}, {
								expr: ECall({
									expr: EField({
										expr: ECall({
											expr: EField({
												expr: EConst(CIdent(tileMap))
												pos: #pos
											}, sub)
											pos: #pos
										}, [{
											expr: EBinop(OpMult, {
												expr: EConst(CIdent(x))
												pos: #pos
											}, {
												expr: EConst(CInt(16))
												pos: #pos
											})
											pos: #pos
										}, {
											expr: EBinop(OpMult, {
												expr: EConst(CIdent(y))
												pos: #pos
											}, {
												expr: EConst(CInt(16))
												pos: #pos
											})
											pos: #pos
										}, {
											expr: EConst(CInt(16))
											pos: #pos
										}, {
											expr: EConst(CInt(16))
											pos: #pos
										}])
										pos: #pos
									}, center)
									pos: #pos
								}, [])
								pos: #pos
							})
							pos: #pos
						})
						pos: #pos
					}])
					pos: #pos
				})
				pos: #pos
			}])
			pos: #pos
		}
		params: []
		ret: null
	})
	meta: []
	name: new
	pos: #pos
}, {
	access: [APublic]
	doc: null
	kind: FFun({
		args: [{
			meta: []
			name: u
			opt: false
			type: TPath({
				name: Universe
				pack: []
				params: []
				sub: null
			})
			value: null
		}]
		expr: {
			expr: EBlock([{
				expr: ECall({
					expr: EField({
						expr: EField({
							expr: EConst(CIdent(u))
							pos: #pos
						}, root)
						pos: #pos
					}, add)
					pos: #pos
				}, [{
					expr: EConst(CIdent(tileGroup))
					pos: #pos
				}, {
					expr: EConst(CInt(0))
					pos: #pos
				}])
				pos: #pos
			}])
			pos: #pos
		}
		params: []
		ret: null
	})
	meta: []
	name: onWarp
	pos: #pos
}, {
	access: [APublic]
	doc: null
	kind: FFun({
		args: [{
			meta: []
			name: t
			opt: false
			type: TPath({
				name: Tiles
				pack: []
				params: []
				sub: null
			})
			value: null
		}, {
			meta: []
			name: e
			opt: false
			type: TPath({
				name: Entity
				pack: []
				params: []
				sub: null
			})
			value: null
		}]
		expr: {
			expr: EBlock([{
				expr: ECall({
					expr: EConst(CIdent(makeTile))
					pos: #pos
				}, [{
					expr: EConst(CIdent(t))
					pos: #pos
				}])
				pos: #pos
			}])
			pos: #pos
		}
		params: []
		ret: null
	})
	meta: []
	name: onMatched
	pos: #pos
}, {
	access: [APublic]
	doc: null
	kind: FFun({
		args: [{
			meta: []
			name: tile
			opt: false
			type: TPath({
				name: Tiles
				pack: []
				params: []
				sub: null
			})
			value: null
		}, {
			meta: []
			name: e
			opt: false
			type: TPath({
				name: Entity
				pack: []
				params: []
				sub: null
			})
			value: null
		}]
		expr: {
			expr: EBlock([{
				expr: ECall({
					expr: EField({
						expr: EConst(CIdent(tileGroup))
						pos: #pos
					}, clear)
					pos: #pos
				}, [])
				pos: #pos
			}, {
				expr: EFor({
					expr: EBinop(OpIn, {
						expr: EConst(CIdent(t))
						pos: #pos
					}, {
						expr: EConst(CIdent(entities))
						pos: #pos
					})
					pos: #pos
				}, {
					expr: EBlock([{
						expr: ECall({
							expr: EConst(CIdent(makeTile))
							pos: #pos
						}, [{
							expr: EConst(CIdent(t))
							pos: #pos
						}])
						pos: #pos
					}])
					pos: #pos
				})
				pos: #pos
			}])
			pos: #pos
		}
		params: []
		ret: null
	})
	meta: []
	name: onUnmatched
	pos: #pos
}, {
	access: [APrivate]
	doc: null
	kind: FFun({
		args: [{
			meta: []
			name: t
			opt: false
			type: TPath({
				name: Tiles
				pack: []
				params: []
				sub: null
			})
			value: null
		}]
		expr: {
			expr: EBlock([{
				expr: EVars([{
					expr: {
						expr: ECall({
							expr: EField({
								expr: EField({
									expr: EField({
										expr: EConst(CIdent(t))
										pos: #pos
									}, transform)
									pos: #pos
								}, pos)
								pos: #pos
							}, toPixel)
							pos: #pos
						}, [])
						pos: #pos
					}
					isFinal: false
					name: pos
					type: null
				}])
				pos: #pos
			}, {
				expr: ECall({
					expr: EField({
						expr: EConst(CIdent(tileGroup))
						pos: #pos
					}, add)
					pos: #pos
				}, [{
					expr: EField({
						expr: EConst(CIdent(pos))
						pos: #pos
					}, x)
					pos: #pos
				}, {
					expr: EField({
						expr: EConst(CIdent(pos))
						pos: #pos
					}, y)
					pos: #pos
				}, {
					expr: EArray({
						expr: EConst(CIdent(tiles))
						pos: #pos
					}, {
						expr: EField({
							expr: EField({
								expr: EConst(CIdent(t))
								pos: #pos
							}, tile)
							pos: #pos
						}, tileId)
						pos: #pos
					})
					pos: #pos
				}])
				pos: #pos
			}])
			pos: #pos
		}
		params: []
		ret: null
	})
	meta: []
	name: makeTile
	pos: #pos
}, {
	access: [APublic]
	doc: null
	kind: FVar(TPath({
		name: IntMap
		pack: [haxe, ds]
		params: [TPType(TPath({
			name: HexMapRule
			pack: [rules]
			params: []
			sub: Tiles
		}))]
		sub: null
	}), {
		expr: ENew({
			name: IntMap
			pack: [haxe, ds]
			params: [TPType(TPath({
				name: HexMapRule
				pack: [rules]
				params: []
				sub: Tiles
			}))]
			sub: null
		}, [])
		pos: #pos
	})
	meta: null
	name: entities
	pos: #pos
}, {
	access: [APublic]
	doc: null
	kind: FFun({
		args: []
		expr: {
			expr: EBlock([])
			pos: #pos
		}
		params: null
		ret: TPath({
			name: Void
			pack: []
			params: []
			sub: null
		})
	})
	meta: null
	name: tick
	pos: #pos
}, {
	access: [APublic]
	doc: null
	kind: FVar(TPath({
		name: Traits
		pack: [phi]
		params: null
		sub: null
	}), {
		expr: EBlock([{
			expr: ENew({
				name: Traits
				pack: [phi]
				params: []
				sub: null
			}, [{
				expr: EArrayDecl([])
				pos: #pos
			}])
			pos: #pos
		}])
		pos: #pos
	})
	meta: null
	name: mask
	pos: #pos
}, {
	access: null
	doc: null
	kind: null <- expected value
	meta: null
	name: null <- expected value
	pos: null <- expected value
}, {
	access: [APublic]
	doc: null
	kind: FFun({
		args: [{
			meta: null
			name: entity
			opt: false
			type: TPath({
				name: Entity
				pack: [phi]
				params: null
				sub: null
			})
			value: null
		}]
		expr: {
			expr: EBlock([{
				expr: EIf({
					expr: ECall({
						expr: EField({
							expr: EConst(CIdent(entities))
							pos: #pos
						}, exists)
						pos: #pos
					}, [{
						expr: EConst(CIdent(entity))
						pos: #pos
					}])
					pos: #pos
				}, {
					expr: EBlock([{
						expr: ECall({
							expr: EConst(CIdent(onUnmatched))
							pos: #pos
						}, [{
							expr: ECall({
								expr: EField({
									expr: EConst(CIdent(entities))
									pos: #pos
								}, get)
								pos: #pos
							}, [{
								expr: EConst(CIdent(entity))
								pos: #pos
							}])
							pos: #pos
						}, {
							expr: EConst(CIdent(entity))
							pos: #pos
						}])
						pos: #pos
					}, {
						expr: ECall({
							expr: EField({
								expr: EConst(CIdent(entities))
								pos: #pos
							}, remove)
							pos: #pos
						}, [{
							expr: EConst(CIdent(entity))
							pos: #pos
						}])
						pos: #pos
					}])
					pos: #pos
				}, null)
				pos: #pos
			}])
			pos: #pos
		}
		params: null
		ret: TPath({
			name: Void
			pack: []
			params: null
			sub: null
		})
	})
	meta: null
	name: removeEntity
	pos: #pos
}]
line 505: expected value
line 507: expected value
line 508: expected value